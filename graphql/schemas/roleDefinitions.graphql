input CreateRoleRelation {
    connect: ID
}

type Role {
    id: ID!
    name: String!
    created_at: DateTime
    updated_at: DateTime
    app: App! @belongsTo(model: "App\\App")
    staffs: [Staff] @belongsToMany(model: "App\\Staff")
}

extend type Query @group(middleware: ["auth:user"]) {
    # roles(app_id: Int): [Role] @all
    roles: [Role] @all
    role(id: ID! @eq): Role @find
}

#should be guarded with accessToken and role
extend type Mutation @group(middleware: ["auth:user"]) {
    addRole(
        name: String! @rules(apply: ["required", "unique:roles,name"])
        app_id: Int! @rules(apply: ["exists:apps,id"])
    ): Role @createRoleService @create
    removeRole(id: ID! @rules(apply: ["exists:roles,id"])): Role @delete
}
